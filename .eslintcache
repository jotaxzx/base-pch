[{"C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\index.js":"1","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\App.js":"2","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\Menu.js":"3","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\FormMultiplesRut.js":"4","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\Listas.js":"5","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\Footer.js":"6","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\NavBar.js":"7","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\FormInfoCom.js":"8","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\FormPrueba.js":"9"},{"size":200,"mtime":1610597595000,"results":"10","hashOfConfig":"11"},{"size":232,"mtime":1610742266098,"results":"12","hashOfConfig":"11"},{"size":1282,"mtime":1610936045239,"results":"13","hashOfConfig":"11"},{"size":5006,"mtime":1610936158182,"results":"14","hashOfConfig":"11"},{"size":5260,"mtime":1610751574919,"results":"15","hashOfConfig":"11"},{"size":498,"mtime":1610659480000,"results":"16","hashOfConfig":"11"},{"size":1761,"mtime":1610740835245,"results":"17","hashOfConfig":"11"},{"size":3950,"mtime":1610939870805,"results":"18","hashOfConfig":"11"},{"size":1795,"mtime":1610936053859,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1if86q0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\index.js",[],["43","44"],"C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\App.js",["45","46"],"import React from 'react';\n\nimport Menu from './components/Menu'\n\n\nimport { IconButton, makeStyles } from '@material-ui/core';\n\nfunction App() {\n\n  return (\n    \n    \n      \n      <Menu/>\n      \n    \n\n\n\n\n  );\n}\n\nexport default App;\n","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\Menu.js",["47","48","49"],"import React, {useState} from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Listas from './Listas';\nimport FormMultiplesRut from './FormMultiplesRut';\nimport NavBar from './NavBar';\n\n\nconst drawerWidth = 310;\n//Configuraciones del sitio\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',    \n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar, // alinea la linea del sidebar con la del navbar\n  },\n  content: {\n    display: 'flex',\n    padding: theme.spacing(9),\n  },\n  \n}));\n\n function MiniDrawer() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n    <div className={classes.root} >\n      <CssBaseline />\n      <NavBar\n      handleDrawerOpen={handleDrawerOpen}\n      open={open}\n      />\n        \n      <Listas \n      open={open}\n      handleDrawerClose={handleDrawerClose}\n      />\n\n    </div>\n    \n    </>\n  );\n}\nexport default MiniDrawer;","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\FormMultiplesRut.js",[],"C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\Listas.js",["50"],"import React from 'react'\nimport {List, ListItemIcon, ListItem, ListItemText, Divider, Container} from '@material-ui/core';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport LibraryBooksIcon from '@material-ui/icons/LibraryBooks';\nimport BuildIcon from '@material-ui/icons/Build';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\n\nimport Drawer from '@material-ui/core/Drawer';\n\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport LogoPCH from '../LogoPCH.png'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport {\n    BrowserRouter, Switch, Route, Link\n} from 'react-router-dom';\nimport FormMultiplesRut from './FormMultiplesRut';\nimport FormInfoCom from './FormInfoCom';\nimport FormPrueba from './FormPrueba';\n\nconst drawerWidth = 310;\nconst useStyle = makeStyles( theme=>({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n      },\n      drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      drawerClose: {\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7), // espacio del sidebar cuando esta oculto(hace que se vean solo los iconos)\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(8), // espacio del sidebar cuando sube del tamaño sm( el padding ancho se agranda)\n        },\n      },\n      toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar, // alinea la linea del sidebar con la del navbar\n      },\n      content: {\n        display: 'flex',\n        padding: theme.spacing(9),\n      },\n\n}))\n\nconst Listas = ({open, handleDrawerClose}) => {\n    const theme = useTheme();\n    const classes = useStyle()\n    return (\n        <>\n     <BrowserRouter>   \n    <Drawer\n        variant=\"permanent\" \n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n       \n        <div className={classes.toolbar}>\n        <img src={LogoPCH} style={{width: '220px', height: '50px' }} />\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ?   < ChevronRightIcon/> : <ChevronLeftIcon />} {/*direccion de la flecha del sidebar. si es de derecha a izquierda right to left*/}\n            \n          </IconButton>\n        </div>\n        <Divider />\n\n\n\n    <List>\n        <Link to=\"/informecomercial\">\n        <ListItem button>\n                    <ListItemIcon>\n                        <LibraryBooksIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary='Informe Comercial'/>\n                </ListItem>\n        </Link>   \n        \n        <Link to=\"/consultamultiple\">\n        <ListItem button>\n                    <ListItemIcon>\n                        <FindInPageIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary='Consulta Multiple'/>\n          </ListItem>\n          </Link>\n          <Link to=\"/administracion\">\n          <ListItem button>\n                    <ListItemIcon>\n                        <SupervisorAccountIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary='Administración'/>\n                </ListItem>\n            </Link>\n            <Link to=\"/soporte\">\n           <ListItem button>\n                    <ListItemIcon>\n                        <BuildIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary='Soporte'/>\n                </ListItem>\n            </Link>\n            <Link to=\"/verificacion\">\n                <ListItem button>\n                    <ListItemIcon>\n                        <CheckCircleIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary='Verificacion de Cheques y ONP'     />\n                </ListItem>\n            </Link> \n    </List> \n     </Drawer>\n     <Switch>\n         <Container maxWidth=\"md\">\n           \n         \n     <main className={classes.content} >\n     \n         <Route exact path=\"/informecomercial\" component={ FormInfoCom }/>\n         \n         <Route exact path=\"/consultamultiple\" component={ FormMultiplesRut }/>\n         <Route exact path=\"/administracion\" component={FormPrueba}/>\n         <Route exact path=\"/soporte\"/>\n         <Route exact path=\"/verificacion\"/>\n    </main>\n    </Container>\n     </Switch>\n     </BrowserRouter>\n        </>\n    )\n}\n\nexport default Listas;\n","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\Footer.js",[],"C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\NavBar.js",["51"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { IconButton, makeStyles, Button } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport clsx from 'clsx';\n\nconst drawerWidth = 310;\n\nconst useStyle = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n\n\n}))\n\n\nconst NavBar = ({open, handleDrawerOpen}) => {\n    const classes = useStyle()\n    return ( \n        <>\n          <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          {/*boton hamburguesa */}\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            \n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            \n          </Typography>\n        </Toolbar>\n      </AppBar>\n        </>\n     );\n}\n \nexport default NavBar;\n","C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\FormInfoCom.js",[],"C:\\Users\\Home\\Desktop\\portalch-app-main\\src\\components\\FormPrueba.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":20},{"ruleId":"56","severity":1,"message":"60","line":6,"column":22,"nodeType":"58","messageId":"59","endLine":6,"endColumn":32},{"ruleId":"56","severity":1,"message":"61","line":2,"column":22,"nodeType":"58","messageId":"59","endLine":2,"endColumn":30},{"ruleId":"56","severity":1,"message":"62","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":24},{"ruleId":"56","severity":1,"message":"63","line":9,"column":7,"nodeType":"58","messageId":"59","endLine":9,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":86,"column":9,"nodeType":"66","endLine":86,"endColumn":72},{"ruleId":"56","severity":1,"message":"67","line":5,"column":34,"nodeType":"58","messageId":"59","endLine":5,"endColumn":40},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'useTheme' is defined but never used.","'FormMultiplesRut' is defined but never used.","'drawerWidth' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]